name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: rocker/verse:4.2.0
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Quarto
        run: |
          apt-get update && apt-get install -y curl gdebi-core
          curl -s https://download1.rstudio.org/electron/focal/amd64/quarto-1.3.450-linux-amd64.deb -o quarto.deb
          gdebi -n quarto.deb
          rm quarto.deb
      
      - name: Install R packages
        run: |
          R -e "install.packages(c('rmarkdown', 'knitr', 'dplyr', 'ggplot2', 'tidyverse', 'shiny', 'bslib', 'ggExtra', 'lubridate', 'plotly', 'maps', 'viridis', 'patchwork'), repos = 'https://cloud.r-project.org/')"
      
      - name: Build website
        run: |
          cd website
          quarto render
      
      - name: Upload built site
        uses: actions/upload-artifact@v3
        with:
          name: site-files
          path: website/_site

  deploy-vercel:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download built site
        uses: actions/download-artifact@v3
        with:
          name: site-files
          path: website/_site
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel-args: '--prod'

  deploy-render:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Download built site
        uses: actions/download-artifact@v3
        with:
          name: site-files
          path: website/_site
      
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
        run: |
          curl -X POST "https://api.render.com/v1/deploys" \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Content-Type: application/json" \
            --data '{"serviceId": "'$RENDER_SERVICE_ID'", "clearCache": true}'